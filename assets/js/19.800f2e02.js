(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{521:function(t,a,s){t.exports=s.p+"assets/img/title.ddf1c3d7.png"},522:function(t,a,s){t.exports=s.p+"assets/img/davechild_regular-expressions.c0d6b0c9.jpg"},554:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("img",{attrs:{src:s(521),alt:'"cover"'}})]),t._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("p",[t._v("正则表达式（regular expression）是一个描述字符模式的对象，有点像字符串的模板，可以对文本进行强大的模式匹配和文本检索与替换功能。\n新建正则表达式有两种方式。一种是使用字面量，以"),e("font",{attrs:{color:"red"}},[t._v("斜杠")]),t._v("表示开始和结束。")],1),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/java/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("另一种是使用RegExp构造函数")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'java'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("这两种方法都是等价的。下面介绍正则表达式的匹配规则")]),t._v(" "),e("h2",{attrs:{id:"匹配规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配规则","aria-hidden":"true"}},[t._v("#")]),t._v(" 匹配规则")]),t._v(" "),e("h3",{attrs:{id:"元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元字符","aria-hidden":"true"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),e("p",[t._v("大部分字符在正则表达式中，就是字面的含义，比如/java/匹配java, 除了字面量字符以外，还有一部分字符有特殊含义，不代表字面的意思。正则表达式严格区分大小写，这些字符叫做“元字符”，主要有以下几个：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("元字符")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v(".")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配除换行符以外的任意字符")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("\\d")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配数字，相当于字符组[0-9]")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("\\w")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配字母, 数字, 下划线")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("\\s")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任意的空白符(包括制表符，空格，换行等)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("\\b")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配单词开始或结束的位置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("^")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配行首")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("$")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配行尾")])])])]),t._v(" "),e("h4",{attrs:{id:"点字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点字符","aria-hidden":"true"}},[t._v("#")]),t._v(" 点字符")]),t._v(" "),e("p",[t._v("点字符(.)匹配除回车(\\r)、换行(\\n)、行分隔符(\\u2028)和段分隔符(\\u2029)以外的字符")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/a.c/")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面代码中a.c匹配a和c之间包含任意一个字符的情况，只要是这三个字符在同一行即可，可以匹配abc但不匹配abbc四个字符的情况。")]),t._v(" "),e("h4",{attrs:{id:"选择符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择符","aria-hidden":"true"}},[t._v("#")]),t._v(" 选择符")]),t._v(" "),e("p",[t._v("选择符(|)表示'or'的选择关系，选择符会包括它前后的多个字符，比如/ab|cd/匹配ab或者cd，而不是b或者c")]),t._v(" "),e("h3",{attrs:{id:"反义元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反义元字符","aria-hidden":"true"}},[t._v("#")]),t._v(" 反义元字符")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("元字符")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("\\D")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配非数字的任意字符，等价于[^0-9]")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("\\W")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配除字母，数字，下划线以外的任意字符")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("\\S")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配非空白的任意字符")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("\\B")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配非单词开始或结束的位置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("[^x]")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("匹配除x以外的任意字符")])])])]),t._v(" "),e("h3",{attrs:{id:"重复限定符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重复限定符","aria-hidden":"true"}},[t._v("#")]),t._v(" 重复限定符")]),t._v(" "),e("p",[t._v("假设重复次数为n")]),t._v(" "),e("p",[t._v("|限定符|描述|记忆方式|\n|:----------😐:-----------😐\n|*|n>=0|看看天上的星星，可能一颗没有，可能零散有几颗，可能数也数不过来。|\n|+|n>=1|加号是追加的意思，得先有一个，然后才考虑追加。|\n|?|n=0 or n=1|问号的意思表示，有吗？|\n|{x}|n=x||\n|{x,}|n>=x||\n|{x,y}|x<=n<=y||")]),t._v(" "),e("h3",{attrs:{id:"贪婪模式和非贪婪模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#贪婪模式和非贪婪模式","aria-hidden":"true"}},[t._v("#")]),t._v(" 贪婪模式和非贪婪模式")]),t._v(" "),e("p",[t._v("默认情况下，上一节的限定词都是贪婪模式，即尽可能最大可能的匹配，即匹配直到下一个字符不满足匹配规则为止。")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),t._v("\nstr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/a+/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// aaa  贪婪模式")]),t._v("\nstr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/a+?/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a 非贪婪模式")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("上面代码，默认是贪婪模式，会一直匹配到字符a没有为止，所以会匹配到3个a.\n如果在限定词后增加"),e("font",{attrs:{color:"red"}},[t._v("?")]),t._v("，则是非贪婪模式，表示尽可能少的去捕获字符")],1),t._v(" "),e("h3",{attrs:{id:"字符类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符类","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符类")]),t._v(" "),e("p",[t._v("可供选择的字符放在"),e("font",{attrs:{color:"red"}},[t._v("方括号[]")]),t._v("内，表示匹配其中一个字符。比如：[xyz]匹配字符x, y或z，如果中括号中包含元字符，则元字符不在具有元字符的功能，比如[+.?]匹配加号，点号或问号。\n有两个字符在字符类中有特殊含义")],1),t._v(" "),e("h4",{attrs:{id:"脱字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脱字符","aria-hidden":"true"}},[t._v("#")]),t._v(" 脱字符(^)")]),t._v(" "),e("p",[t._v("[^xyz]表示除了xyz中的字符都可以匹配，如果方括号内没有其他字符，就表示匹配一切字符，其中包括换行符，而点号(.)是不包括换行符的，其中要注意的是脱字符只有在字符类的第一个位置才有特殊意义，否则就是字面含义")]),t._v(" "),e("h4",{attrs:{id:"连字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连字符","aria-hidden":"true"}},[t._v("#")]),t._v(" 连字符(-)")]),t._v(" "),e("p",[t._v("对于连续序列的字符，连字符(-)可以提供简写形式，表示字符的连续范围。比如[a-z]表示26个小写字母，但是当连字符不出现在方括号内，就不具备简写的作用，只代表字面的含义。\n不要过分使用连字符，设定一个很大的范围，否则很可能选中意料之外的字符。最典型的例子就是[A-z]，表面上它是选中从大写的A到小写的z之间52个字母，但是由于在ASCII编码之中，大写字母与小写字母之间还有其他字符，结果就会出现意料之外的结果。")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[A-z]/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面代码中，由于反斜杠（\\）的ASCII码在大写字母与小写字母之间，结果会被选中。")]),t._v(" "),e("h3",{attrs:{id:"分组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分组","aria-hidden":"true"}},[t._v("#")]),t._v(" 分组")]),t._v(" "),e("p",[t._v("正则表达式中的小括号表示分组匹配")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(abc)+/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcabc'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("分组可以方便的表示重复次数，还可以用于捕获，请看捕获性分组")]),t._v(" "),e("h4",{attrs:{id:"捕获性分组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#捕获性分组","aria-hidden":"true"}},[t._v("#")]),t._v(" 捕获性分组")]),t._v(" "),e("p",[t._v("捕获性分组，通常由一对小括号加上子表达式组成，捕获分组所匹配的内容暂储存在内存中以便下次使用，捕获性分组会创建反向引用，每个反向引用都用一个编号或名称来标识，主要通过"),e("font",{attrs:{color:"red"}},[t._v("$+编号")]),t._v("或者"),e("font",{attrs:{color:"red"}},[t._v("+编号")]),t._v("表示法进行引用")],1),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcabc'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(.)b(.)/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['abc', 'a', 'c']")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RegExp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RegExp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("上面代码中，正则表达式/(.)b(.)/使用了两个括号，第一个括号捕获a，第二个括号捕获c。\nRegExp."),e("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[e("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"16.692ex",height:"2.262ex",viewBox:"0 -750 7377.8 1000"}},[e("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"matrix(1 0 0 -1 0 0)"}},[e("g",{attrs:{"data-mml-node":"math"}},[e("g",{attrs:{"data-mml-node":"mn"}},[e("path",{attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),e("g",{attrs:{"data-mml-node":"mo",transform:"translate(777.8, 0)"}},[e("text",{attrs:{"data-variant":"normal",transform:"matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("指")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(600, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("向")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(1200, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("该")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(1800, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("分")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(2400, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("组")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(3000, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("捕")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(3600, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("获")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(4200, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("的")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(4800, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("内")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(5400, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("容")]),e("text",{attrs:{"data-variant":"normal",transform:"translate(6000, 0) matrix(1 0 0 -1 0 0)","font-size":"884px","font-family":"serif"}},[t._v("，")])])])])])]),t._v("+编号只能在正则表达式外使用。\n注意，使用组匹配时，不宜同时使用g修饰符，否则match方法不会捕获分组的内容。")],1),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcabc'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(.)b(.)/g")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['abc', 'abc']")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面代码使用了带g修饰符的正则表达式，结果match方法只捕获了匹配整个表达式的部分")]),t._v(" "),e("h4",{attrs:{id:"反向引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向引用","aria-hidden":"true"}},[t._v("#")]),t._v(" 反向引用")]),t._v(" "),e("p",[t._v("获取捕获性分组所匹配结果的过程称为“反向引用”。在正则表达式内部，可以用"),e("font",{attrs:{color:"red"}},[t._v("\\n")]),t._v("引用括号匹配的内容，n是从1开始的自然数，表示对应顺序的括号。")],1),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(.)b(.)\\1b\\2/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcabc'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面代码中，\\1表示第一个括号匹配的内容，\\2表示第二个括号匹配的内容。括号也可以嵌套")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/a((..)\\2)\\1/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'adededede'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面代码中，\\1指向外层括号，\\2指向内层括号，按照从左到右左括号出现的顺序确定编号。")]),t._v(" "),e("h4",{attrs:{id:"非捕获性分组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非捕获性分组","aria-hidden":"true"}},[t._v("#")]),t._v(" 非捕获性分组")]),t._v(" "),e("p",[e("font",{attrs:{color:"red"}},[t._v("(?:x)")]),t._v("称为非捕获性分组，表示不返回该组匹配的内容，即匹配的结果中不计入这个括号。\n它的作用是在要使用括号的情况下，不会占用一个组匹配。比如需要匹配foo或者foofoo,正则表达式可写/(foo){1, 2}/，但是这样就占用了一个组匹配，写成/(?:foo){1, 2}/作用与前一个正则表达式一样，但是不会占用组匹配")],1),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?:.)b(.)/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['abc', 'c']")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面代码中，第一个括号是非捕获性分组，所以最后返回的结果没有第一个括号的内容，只有第二个括号匹配的内容。")]),t._v(" "),e("h4",{attrs:{id:"先行断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先行断言","aria-hidden":"true"}},[t._v("#")]),t._v(" 先行断言")]),t._v(" "),e("p",[t._v("先行断言的形式为x(?=y)，x只有在y前面才匹配，y不会计入返回结果，括号内的部分不会返回到结果")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/b(?=c)/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['b']")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面代码使用了先行断言，b在c前面所以被匹配，但是括号对应的c不会被返回")]),t._v(" "),e("h4",{attrs:{id:"先行否定断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先行否定断言","aria-hidden":"true"}},[t._v("#")]),t._v(" 先行否定断言")]),t._v(" "),e("p",[t._v("先行否定断言的形式为"),e("font",{attrs:{color:"red"}},[t._v("x(?!y)")]),t._v("，x只有不在y前面才匹配，y不会计入返回结果")],1),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abdbc'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/b(?!c)/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['b]")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面代码使用了先行否定断言，b不在c前面所以被匹配，但是括号对应的c不会被返回")]),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("p",[t._v("[1] 阮一峰, "),e("a",{attrs:{href:"http://javascript.ruanyifeng.com/stdlib/regexp.html#toc1",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript标准参考教程"),e("OutboundLink")],1),t._v("\n[2] 路易斯, "),e("a",{attrs:{href:"http://louiszhai.github.io/2016/06/13/regexp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式前端使用手册"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"附录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#附录","aria-hidden":"true"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),e("p",[e("img",{attrs:{src:s(522),alt:'"regexp cheatsheep"'}})])])},[],!1,null,null,null);a.default=r.exports}}]);